{"version":3,"sources":["components/allDiscoverTotalChoiceness/allDiscoverTotalChoicenessItem/index.tsx","pages/allDiscoverTotalChoiceness/index.tsx","mock/discover-total-choiceness-data/index.js"],"names":["AllDiscoverTotalChoicenessItem","this","props","title","avatar","className","src","alt","clickable","Component","AllDiscoverTotalChoiceness","state","data","axios","get","then","res","setState","allData","map","item","key","id","isGoBackNeeded","middleTitle","totalChoicenessData","require","urlReg","Mock","mock","option","url","match","randomNumArr","length","randomNum","Math","floor","random","push","Set"],"mappings":"0SA+BeA,E,uKArBF,IAAD,EACoBC,KAAKC,MAAtBC,EADH,EACGA,MAAOC,EADV,EACUA,OAEd,OACI,yBAAKC,UAAU,kCACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,KACI,yBAAKC,IAAKF,EAAQG,IAAI,OAG9B,yBAAKF,UAAU,SACX,yBAAKA,UAAU,SACVF,IAGT,kBAAC,IAAD,CAAUK,WAAW,GAArB,qB,GAhB6BC,aCEvCC,E,4MACFC,MAAQ,CACJC,KAAM,I,kEAEW,IAAD,OAChBC,IAAMC,IAAI,sCACLC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CACvBL,KAAMI,EAAIJ,Y,+BAGZ,IAGAM,EAFSjB,KAAKU,MAAbC,KAEiCO,KAAI,SAACC,GACzC,OACI,kBAAC,EAAD,iBACQA,EADR,CAEIC,IAAKD,EAAKE,SAKtB,OACI,yBAAKjB,UAAU,8BACX,kBAAC,IAAD,CAASkB,gBAAgB,EAAOC,YAAa,6BAEzCN,O,GA1BqBT,aAiC1BC,a,6DC3CTe,EAAsBC,EAAQ,IAC9BC,EAAS,0CAEFC,IAAKC,KAAKF,GAAQ,SAAUG,GAIrC,GAHgBA,EAARC,IACYC,MAAML,GAAQ,GAc9B,OAAOF,EAVP,IADA,IAAIQ,EAAe,GACZA,EAAaC,OAAS,GAAG,CAC5B,IAAMC,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAClCL,EAAaM,KAAKJ,GAClBF,EAAY,YAAO,IAAIO,IAAIP,IAK/B,OAFeA,EAAad,KAAI,SAAAC,GAAI,OAAIK,EAAoBL,U","file":"static/js/16.47c196dd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { DiscoverTotalChoicenessItemInt } from '@/pages/discover/discoverTotalChoiceness';\nimport MyButton from '@/baseUI/myButton';\nimport './allDiscoverTotalChoicenessItem.styl';\nimport LazyLoad from 'react-lazyload';\n\ninterface Props extends DiscoverTotalChoicenessItemInt{\n\n}\nclass AllDiscoverTotalChoicenessItem extends Component<Props,any>{\n    render(){\n        const {title, avatar} = this.props;\n\n        return(\n            <div className=\"allDiscoverTotalChoicenessItem\">\n                <div className=\"left\">\n                    <LazyLoad>\n                        <img src={avatar} alt=\"\"/>\n                    </LazyLoad>\n                </div>\n                <div className=\"right\">\n                    <div className=\"title\">\n                        {title}\n                    </div>\n                </div>\n                <MyButton clickable={true}>查看</MyButton>\n            </div>\n        )\n    }\n}\n\nexport default AllDiscoverTotalChoicenessItem;","import React, { Component } from 'react';\nimport { DiscoverTotalChoicenessItemInt } from '@/pages/discover/discoverTotalChoiceness';\nimport './allDiscoverTotalChoiceness.styl';\nimport axios from 'axios';\nimport '@/mock/discover-total-choiceness-data';\nimport Header from '@/baseUI/header';\nimport AllDiscoverTotalChoicenessItem from '@/components/allDiscoverTotalChoiceness/allDiscoverTotalChoicenessItem'\n\ninterface State {\n    data: Array<DiscoverTotalChoicenessItemInt>\n}\nclass AllDiscoverTotalChoiceness extends Component<any, State>{\n    state = {\n        data: [],\n    }\n    componentDidMount() {\n        axios.get('/mock/discover/totalChoiceness/all')\n            .then(res => this.setState({\n                data: res.data\n            }))\n    }\n    render() {\n        const {data} = this.state;\n\n        const allData:Array<JSX.Element> = data.map((item:DiscoverTotalChoicenessItemInt) => {\n            return(\n                <AllDiscoverTotalChoicenessItem \n                    {...item}\n                    key={item.id}\n                />\n            )\n        })\n\n        return (\n            <div className=\"allDiscoverTotalChoiceness\">\n                <Header  isGoBackNeeded={true}  middleTitle={\"精选合辑\"}/>\n                {\n                    allData\n                }\n            </div>\n        )\n    }\n}\n\nexport default AllDiscoverTotalChoiceness;","import Mock from 'mockjs';\nconst totalChoicenessData = require('./totalChoiceness.json')\nconst urlReg = /mock\\/discover\\/totalChoiceness(\\/all)?/;\n\nconst data = Mock.mock(urlReg, function (option) {\n    const { url } = option;\n    const havaAll = url.match(urlReg)[1]\n\n    if (!havaAll) {//如果URL中带有/all，那么就返回所有数据\n        let randomNumArr = [];\n        while (randomNumArr.length < 4) {\n            const randomNum = Math.floor(Math.random() * 40)\n            randomNumArr.push(randomNum)\n            randomNumArr = [...new Set(randomNumArr)]\n        }\n\n        const resArr = randomNumArr.map(item => totalChoicenessData[item])\n\n        return resArr;\n    }else{\n        return totalChoicenessData;\n    }\n})\n\nexport default data;"],"sourceRoot":""}