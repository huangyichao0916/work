{"version":3,"sources":["assets/imgs/avatar.JPG","components/mine/mineItem/index.tsx","pages/mine/index.tsx","baseUI/header/index.tsx","../node_modules/classnames/index.js","assets/imgs/account.png"],"names":["module","exports","MineItem","this","props","isDotShow","title","myClassName","linkTo","balance","id","icon","handleOnClick","isDotShowBoo","to","className","onClick","dangerouslySetInnerHTML","__html","Component","Mine","Swiper","loop","autoplay","delay","BScroll","scrollY","click","scrollX","items","myItems","map","i","isBalanceShow","classNames","key","middleTitle","rightTitle","src","avatar","alt","imgg","width","height","length","connect","state","getIn","toJS","dispatch","setIsDotedToFalseActionCreator","console","log","judgeIsItIconfont","Header","divLeft","divRight","divMiddle","isGoBackNeeded","leftTitle","leftTitleURL","rightTitleURL","Error","window","history","back","test","e","preventDefault","hasOwn","hasOwnProperty","classes","arguments","arg","argType","push","Array","isArray","inner","apply","call","join","default"],"mappings":";gIAAAA,EAAOC,QAAU,IAA0B,oC,+KCoC5BC,E,uKApBF,MAE6EC,KAAKC,MAAjFC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,MAAOC,EAFnB,EAEmBA,YAAaC,EAFhC,EAEgCA,OAAQC,EAFxC,EAEwCA,QAASC,EAFjD,EAEiDA,GAAIC,EAFrD,EAEqDA,KAAMC,EAF3D,EAE2DA,cAC1DC,EAAqC,IAAdR,EAE7B,OACI,kBAAC,IAAD,CAAMS,GAAIN,EAAQO,UAAWR,EAAaS,QAAS,kBAAMJ,EAAcF,EAAIG,KACvE,0BAAME,UAAU,qBAAqBE,wBAAyB,CAAEC,OAAQP,KACxE,yBAAKI,UAAU,iBACX,yBAAKA,UAAU,SAAST,GACvBO,GAAgB,yBAAKE,UAAU,YAChC,yBAAKA,UAAU,UAAUN,IAE7B,0BAAMM,UAAU,uBAAhB,e,GAdOI,a,iECUjBC,E,kLAEE,IAAIC,IAAO,oBAAqB,CAC5BC,MAAM,EACNC,SAAU,CACNC,MAAO,OAGf,IAAIC,IAAQ,mBAAoB,CAC5BC,SAAS,EACTC,OAAO,EACPC,SAAS,M,+BAGP,IAAD,EACmCzB,KAAKC,MAAvCyB,EADD,EACCA,MAAOjB,EADR,EACQA,cAAeH,EADvB,EACuBA,QACtBqB,EAA8BD,EAAME,KAAI,SAACC,GAAyB,IAE5DtB,EAAsDsB,EAAtDtB,GAAIJ,EAAkD0B,EAAlD1B,MAAO2B,EAA2CD,EAA3CC,cAAezB,EAA4BwB,EAA5BxB,OAAQH,EAAoB2B,EAApB3B,UAAWM,EAASqB,EAATrB,KAE/CJ,EAAsB2B,IAAW,CACnC,qBAAqB,EACrB,OAA4B,IAAlBD,IAEd,OACI,kBAAC,EAAD,CACI3B,MAAOA,EACPE,OAAQA,EACRD,YAAaA,EACbF,UAAWA,EACXK,GAAIA,EACJC,KAAMA,EACNF,QAASA,EAET0B,IAAKzB,EACLE,cAAeA,OAI3B,OACI,yBAAKG,UAAU,QACX,kBAAC,IAAD,CAAQqB,YAAa,eAAMC,WAAY,aACvC,yBAAKtB,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKuB,IAAKC,IAAQC,IAAI,oCAE1B,yBAAKzB,UAAU,kBACX,wBAAIA,UAAU,QAAd,eAGA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,SAAf,eACA,yBAAKA,UAAU,YAAf,2BACQ,0BAAMA,UAAU,uBAAhB,cAKpB,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,yBAAKuB,IAAKG,IAAMD,IAAI,iCAAQE,MAAM,OAAOC,OAAO,YAK3Db,EAAQc,OAAS,GAAKd,S,GApE5BX,aA+FJ0B,uBAnBS,SAAAC,GACpB,MAAO,CACHjB,MAAOiB,EAAMC,MAAM,CAAC,uBAAuBC,OAC3CvC,QAASqC,EAAMC,MAAM,CAAC,gBAGH,SAACE,GACxB,MAAO,CACHrC,cAAe,SAACF,EAAYL,GAEnBA,EAIL4C,EAASC,YAA+BxC,IAHpCyC,QAAQC,IAAI,6GAQbP,CAA6CzB,I,4FC5GtDiC,G,MAA4B,WAC5BC,E,uKACQ,IAWFC,EA4DAC,EAiDAC,EAxHC,EAQDtD,KAAKC,MARJ,IAEDsD,sBAFC,SAGDC,EAHC,EAGDA,UACAC,EAJC,EAIDA,aACAxB,EALC,EAKDA,YACAC,EANC,EAMDA,WACAwB,EAPC,EAODA,cAMJ,GAAIH,EAAgB,CAChB,GAAIC,GAAaC,EACb,MAAM,IAAIE,MAAM,8IAEpBP,EACI,0BAAMxC,UAAU,gBAAgBC,QAAS,kBAAM+C,OAAOC,QAAQC,SAA9D,eAKJ,GAAIN,EAGQJ,EAFJF,EAAkBa,KAAKP,GACnBC,EAEI,yBAAK7C,UAAU,aACX,kBAAC,IAAD,CAAMD,GAAI8C,GACN,0BAAM7C,UAAU,gBAAgBE,wBAAyB,CAAEC,OAAQyC,OAM3E,yBAAK5C,UAAU,aACX,0BAAMA,UAAU,gBAAgBE,wBAAyB,CAAEC,OAAQyC,MAK3EC,EAEI,yBAAK7C,UAAU,aACX,kBAAC,IAAD,CAAMD,GAAI8C,GACLD,IAMT,yBAAK5C,UAAU,aACV4C,OAKd,CACH,GAAIC,EACA,MAAM,IAAIE,MAAM,8HAEhBP,EACI,0BAAMxC,UAAU,eAAeC,QAAS,SAAAmD,GAAC,OAAIA,EAAEC,mBAA/C,gBAWhB,GAAI/B,EAGQmB,EAFJH,EAAkBa,KAAK7B,GACnBwB,EAEI,yBAAK9C,UAAU,cACX,kBAAC,IAAD,CAAMD,GAAI+C,GACN,0BAAM9C,UAAU,gBAAgBE,wBAAyB,CAAEC,OAAQmB,OAM3E,yBAAKtB,UAAU,cACX,0BAAMA,UAAU,gBAAgBE,wBAAyB,CAAEC,OAAQmB,MAK3EwB,EAEI,yBAAK9C,UAAU,cACX,kBAAC,IAAD,CAAMD,GAAI+C,GACLxB,IAMT,yBAAKtB,UAAU,cACVsB,OAKd,CACH,GAAIwB,EACA,MAAM,IAAIC,MAAM,gIAEhBN,EACI,yBAAKzC,UAAU,gBAAgBC,QAAS,SAAAmD,GAAC,OAAIA,EAAEC,mBAA/C,iBAuBZ,OAbIX,EADArB,EAEI,yBAAKrB,UAAU,eACVqB,GAKL,yBAAKrB,UAAU,8BAA8BC,QAAS,SAAAmD,GAAC,OAAIA,EAAEC,mBAA7D,mBAOJ,yBAAKrD,UAAU,gBAEPwC,EAGAE,EAGAD,O,GAjJCrC,aAwJNmC,O,wCCrKf,OAOC,WACA,aAEA,IAAIe,EAAS,GAAGC,eAEhB,SAASpC,IAGR,IAFA,IAAIqC,EAAU,GAELvC,EAAI,EAAGA,EAAIwC,UAAU5B,OAAQZ,IAAK,CAC1C,IAAIyC,EAAMD,UAAUxC,GACpB,GAAKyC,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BH,EAAQI,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAI7B,OAAQ,CAC5C,IAAIkC,EAAQ5C,EAAW6C,MAAM,KAAMN,GAC/BK,GACHP,EAAQI,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIvC,KAAOsC,EACXJ,EAAOW,KAAKP,EAAKtC,IAAQsC,EAAItC,IAChCoC,EAAQI,KAAKxC,IAMjB,OAAOoC,EAAQU,KAAK,KAGgBjF,EAAOC,SAC3CiC,EAAWgD,QAAUhD,EACrBlC,EAAOC,QAAUiC,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,mBCPDlC,EAAOC,QAAU,IAA0B","file":"static/js/12.30ebfc47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.1864e6d2.JPG\";","import React, { Component } from 'react';\r\nimport './mineItem.styl'\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    title:string;\r\n    linkTo:string;\r\n    myClassName:string;\r\n    isDotShow:number;\r\n    id:number;\r\n    icon:string;\r\n    \r\n    balance:number;\r\n    handleOnClick:(id:number, isDotShow:boolean) => void;\r\n}\r\nclass MineItem extends Component<Props> {\r\n    render() {\r\n        // console.log(this.props)\r\n        let { isDotShow, title, myClassName, linkTo, balance, id, icon, handleOnClick } = this.props;\r\n        const isDotShowBoo:boolean = isDotShow === 1 ? true : false;\r\n        // console.log(title)\r\n        return (\r\n            <Link to={linkTo} className={myClassName} onClick={() => handleOnClick(id, isDotShowBoo)}>\r\n                <span className=\"icon iconfont left\" dangerouslySetInnerHTML={{ __html: icon }}></span>\r\n                <div className=\"title-wrapper\">\r\n                    <div className=\"title\">{title}</div>\r\n                    {isDotShowBoo && <div className=\"red-dot\"></div>}\r\n                    <div className=\"detail\">{balance}</div>\r\n                </div>\r\n                <span className=\"icon iconfont right\">&#xe613;</span>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MineItem;","import React, { Component, Dispatch } from 'react';\nimport './mine.styl'\nimport avatar from '@/assets/imgs/avatar.JPG';\nimport imgg from '@/assets/imgs/account.png';\nimport MineItem from '@/components/mine/mineItem'\nimport Swiper from \"swiper\"\nimport \"swiper/css/swiper.min.css\";\nimport classNames from 'classnames';\nimport BScroll from 'better-scroll';\nimport Header from '@/baseUI/header'\n\nimport { connect } from 'react-redux'\n\nimport { MinePageDataItem } from '@/store/types'\nimport {\n    setIsDotedToFalseActionCreator,\n    SetIsDotedToFalseAction\n} from '@/store/action';\n\n\ninterface Props {\n    items: Array<MinePageDataItem>;\n    balance: number;\n    handleOnClick: (id: number, isDotShow: boolean) => void;\n}\nclass Mine extends Component<Props> {\n    componentDidMount() {\n        new Swiper(\".slider-container\", {\n            loop: true,\n            autoplay: {\n                delay: 2000,\n            },\n        })\n        new BScroll('.bscroll-wrapper', {\n            scrollY: true,\n            click: true,\n            scrollX: false\n        })\n    }\n    render() {\n        let { items, handleOnClick, balance } = this.props;\n        const myItems: Array<JSX.Element> = items.map((i: MinePageDataItem) => {\n\n            const { id, title, isBalanceShow, linkTo, isDotShow, icon } = i;\n\n            const myClassName: string = classNames({\n                'mine-item-wrapper': true,\n                'hidden': isBalanceShow === 1 ? false : true,\n            })\n            return (\n                <MineItem\n                    title={title}\n                    linkTo={linkTo}\n                    myClassName={myClassName}\n                    isDotShow={isDotShow}\n                    id={id}\n                    icon={icon}\n                    balance={balance}\n\n                    key={id}\n                    handleOnClick={handleOnClick}\n                />\n            )\n        })\n        return (\n            <div className=\"mine\">\n                <Header middleTitle={\"我的\"} rightTitle={\"&#xe665;\"}/>\n                <div className=\"bscroll-wrapper\" >\n                    <div className=\"content\">\n                        <div className=\"mine-info-wrapper\">\n                            <div className=\"avatar\">\n                                <img src={avatar} alt=\"图片不见了\" />\n                            </div>\n                            <div className=\"name-and-phone\">\n                                <h3 className=\"name\">\n                                    Geek_14dce3\n                                </h3>\n                                <div className=\"phone-and-selfPage\">\n                                    <div className=\"phone\">12345678910</div>\n                                    <div className=\"selfPage\">\n                                        个人主页<span className=\"icon iconfont right\">&#xe613;</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"slider-container\">\n                            <div className=\"swiper-wrapper\">\n                                <div className=\"swiper-slide\">\n                                    <img src={imgg} alt=\"图片不见了\" width=\"100%\" height=\"100%\" />\n                                </div>\n                            </div>\n                        </div>\n\n                        {myItems.length > 0 && myItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        items: state.getIn(['mineItemDateSource']).toJS(),\n        balance: state.getIn(['account']),\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch<SetIsDotedToFalseAction>) => {\n    return {\n        handleOnClick: (id: number, isDotShow: boolean) => {\n            // console.log('id为' + id)\n            if (!isDotShow) {\n                console.log('因为本身不带有Dot，所以阻断了dispatch请求')\n                return;\n            }\n            dispatch(setIsDotedToFalseActionCreator(id));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mine);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.styl';\n\ninterface Props {\n    isGoBackNeeded?: boolean;\n    leftTitle?: string;\n    leftTitleURL?: string;\n    middleTitle?: string;\n    rightTitle?: string;\n    rightTitleURL?: string;\n}\nconst judgeIsItIconfont: RegExp = /^&#.+;$/;\nclass Header extends Component<Props>{\n    render() {\n        const {\n            isGoBackNeeded = false,\n            leftTitle,\n            leftTitleURL,\n            middleTitle,\n            rightTitle,\n            rightTitleURL\n        } = this.props;\n\n        //左侧的title的判断\n        let divLeft: JSX.Element;\n\n        if (isGoBackNeeded) {\n            if (leftTitle || leftTitleURL) {\n                throw new Error(\"在确定了leftTitle是回退按钮时，不能传入leftTitle或者leftTitleURL了\");\n            }\n            divLeft = (\n                <span className=\"icon iconfont\" onClick={() => window.history.back()}>\n                    &#xe647;\n                </span>\n            )\n        } else {\n            if (leftTitle) {\n                if (judgeIsItIconfont.test(leftTitle)) {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: leftTitle }}></span>\n                                </Link>\n                            </div>\n                        )\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: leftTitle }}></span>\n                            </div>\n                        )\n                    }\n                } else {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    {leftTitle}\n                                </Link>\n                            </div>\n                        )\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                {leftTitle}\n                            </div>\n                        )\n                    }\n                }\n            } else {\n                if (leftTitleURL) {\n                    throw new Error(\"组件Props参数错误，传入leftTitleURL的前提是要传入leftTitle\");\n                } else {\n                    divLeft = (\n                        <span className=\"nothing-left\" onClick={e => e.preventDefault()}>\n                            nothing-left\n                        </span>\n                    )\n                }\n            }\n        }\n\n        //右侧的title的判断\n        let divRight: JSX.Element;\n\n        if (rightTitle) {\n            if (judgeIsItIconfont.test(rightTitle)) {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: rightTitle }}></span>\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: rightTitle }}></span>\n                        </div>\n                    )\n                }\n            } else {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                {rightTitle}\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            {rightTitle}\n                        </div>\n                    )\n                }\n            }\n        } else {\n            if (rightTitleURL) {\n                throw new Error(\"组件Props参数错误，传入rightTitleURL的前提是要传入rightTitle\");\n            } else {\n                divRight = (\n                    <div className=\"nothing-right\" onClick={e => e.preventDefault()}>\n                        nothing-right\n                    </div>\n                )\n            }\n        }\n\n        //中间的title的判断\n        let divMiddle: JSX.Element;\n        if (middleTitle) {\n            divMiddle = (\n                <div className=\"middleTitle\">\n                    {middleTitle}\n                </div>\n            )\n        } else {\n            divMiddle = (\n                <div className=\"middleTitle no-middle-title\" onClick={e => e.preventDefault()}>\n                    no-middle-title\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"baseUIHeader\">\n                {\n                    divLeft\n                }\n                {\n                    divMiddle\n                }\n                {\n                    divRight\n                }\n            </div>\n        )\n    }\n}\n\nexport default Header;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __webpack_public_path__ + \"static/media/account.6527da1d.png\";"],"sourceRoot":""}