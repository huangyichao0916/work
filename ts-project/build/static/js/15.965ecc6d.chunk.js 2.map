{"version":3,"sources":["components/allDiscoverLessonEveryday/allDiscoverLessonEverydayItem/index.tsx","pages/allDiscoverLessonEveryday/index.tsx","mock/discover-leeson-everyday-data/index.js"],"names":["AllDiscoverLessonEverydayItem","this","props","title","subtitle","avatar","console","log","className","src","alt","clickable","Component","AllDiscoverLessonEveryday","state","data","axios","get","then","res","setState","allItem","map","item","key","id","isGoBackNeeded","middleTitle","lessonEverydayData","require","urlReg","Mock","mock","option","url","match","randomNumArr","length","randomNum","Math","floor","random","push","Set"],"mappings":"gSAkCeA,E,uKAxBF,IAAD,EAC8BC,KAAKC,MAAhCC,EADH,EACGA,MAAOC,EADV,EACUA,SAAUC,EADpB,EACoBA,OAExB,OADAC,QAAQC,IAAIF,GAER,yBAAKG,UAAU,iCACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,KACI,yBAAKC,IAAKJ,EAAQK,IAAI,OAG9B,yBAAKF,UAAU,SACX,yBAAKA,UAAU,SACVL,GAEL,yBAAKK,UAAU,YACVJ,IAGT,kBAAC,IAAD,CAAUO,WAAW,GAArB,qB,GAnB4BC,a,QCGtCC,E,4MACFC,MAAQ,CACJC,KAAM,I,kEAEW,IAAD,OAMhBC,IAAMC,IAAI,qCACLC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CACvBL,KAAMI,EAAIJ,Y,+BAGZ,IAGAM,EAFWpB,KAAKa,MAAdC,KAEiCO,KAAI,SAACC,GAC1C,OACI,kBAAC,EAAD,iBACQA,EADR,CAEIC,IAAKD,EAAKE,SAKtB,OACI,yBAAKjB,UAAU,6BACX,kBAAC,IAAD,CAAQkB,gBAAgB,EAAMC,YAAa,6BAE3C,yBAAKnB,UAAU,cACX,yBAAKA,UAAU,WAEPa,S,GAlCYT,aA2CzBC,a,6DCtDTe,EAAqBC,EAAQ,IAC7BC,EAAS,yCAEFC,IAAKC,KAAKF,GAAQ,SAAUG,GAIrC,GAHgBA,EAARC,IACYC,MAAML,GAAQ,GAc9B,OAAOF,EAVP,IADA,IAAIQ,EAAe,GACZA,EAAaC,OAAS,GAAG,CAC5B,IAAMC,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAClCL,EAAaM,KAAKJ,GAClBF,EAAY,YAAO,IAAIO,IAAIP,IAK/B,OAFeA,EAAad,KAAI,SAAAC,GAAI,OAAIK,EAAmBL,U","file":"static/js/15.965ecc6d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { DiscoverLessonEverydayItemInt } from '@/pages/discover/discoverLessonEveryday';\nimport './allDiscoverLessonEverydayItem.styl';\nimport MyButton from '@/baseUI/myButton';\nimport LazyLoad from 'react-lazyload';\n\ninterface Props extends DiscoverLessonEverydayItemInt{\n\n}\nclass AllDiscoverLessonEverydayItem extends Component<Props,any>{\n    render(){\n        const {title, subtitle, avatar} = this.props;\n        console.log(avatar)\n        return(\n            <div className=\"allDiscoverLessonEverydayItem\">\n                <div className=\"left\">\n                    <LazyLoad>\n                        <img src={avatar} alt=\"\"/>\n                    </LazyLoad>\n                </div>\n                <div className=\"right\">\n                    <div className=\"title\">\n                        {title}\n                    </div>\n                    <div className=\"subtitle\">\n                        {subtitle}\n                    </div>\n                </div>\n                <MyButton clickable={true}>试看</MyButton>\n            </div>\n        )\n    }\n}\n\nexport default AllDiscoverLessonEverydayItem;","import React, { Component } from 'react';\nimport { DiscoverLessonEverydayItemInt } from '@/pages/discover/discoverLessonEveryday';\nimport './allDiscoverLessonEveryday.styl';\nimport axios from 'axios';\nimport '@/mock/discover-leeson-everyday-data'\nimport AllDiscoverLessonEverydayItem from '../../components/allDiscoverLessonEveryday/allDiscoverLessonEverydayItem'\nimport Header from '@/baseUI/header';\n// import BScroll from 'better-scroll';\n\ninterface State {\n    data: Array<DiscoverLessonEverydayItemInt>\n}\nclass AllDiscoverLessonEveryday extends Component<any, State>{\n    state = {\n        data: [],\n    }\n    componentDidMount() {\n        // new BScroll('.bs-wrapper', {\n        //     scrollY: true,\n        //     click: true,\n        //     scrollX: false,\n        // })\n        axios.get('/mock/discover/lessonEveryday/all')\n            .then(res => this.setState({\n                data: res.data\n            }))\n    }\n    render() {\n        const { data } = this.state;\n\n        const allItem: Array<JSX.Element> = data.map((item: DiscoverLessonEverydayItemInt) => {\n            return (\n                <AllDiscoverLessonEverydayItem\n                    {...item}\n                    key={item.id}\n                />\n            )\n        })\n\n        return (\n            <div className=\"allDiscoverLessonEveryday\">\n                <Header isGoBackNeeded={true} middleTitle={\"每日一课\"} />\n\n                <div className=\"bs-wrapper\">\n                    <div className=\"content\">\n                        {\n                            allItem\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AllDiscoverLessonEveryday;","import Mock from 'mockjs';\nconst lessonEverydayData = require('./lessonEverydayData.json')\nconst urlReg = /mock\\/discover\\/lessonEveryday(\\/all)?/;\n\nconst data = Mock.mock(urlReg, function (option) {\n    const { url } = option;\n    const havaAll = url.match(urlReg)[1]\n\n    if (!havaAll) {//如果URL中带有/all，那么就返回所有数据\n        let randomNumArr = [];\n        while (randomNumArr.length < 4) {\n            const randomNum = Math.floor(Math.random() * 60)\n            randomNumArr.push(randomNum)\n            randomNumArr = [...new Set(randomNumArr)]\n        }\n\n        const resArr = randomNumArr.map(item => lessonEverydayData[item])\n\n        return resArr;\n    }else{\n        return lessonEverydayData;\n    }\n})\n\nexport default data;"],"sourceRoot":""}