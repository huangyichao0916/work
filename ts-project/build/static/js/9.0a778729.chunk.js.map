{"version":3,"sources":["mock/discover-leeson-everyday-data/index.js","pages/discover/discoverLessonEveryday/discoverLessonEverydayItem/index.tsx","pages/discover/discoverLessonEveryday/index.tsx","mock/discover-total-choiceness-data/index.js","pages/discover/discoverTotalChoiceness/discoverTotalChoicenessItem/index.tsx","pages/discover/discoverTotalChoiceness/index.tsx","pages/discover/Discover.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/study/studyHeader.style.js"],"names":["lessonEverydayData","require","Mock","mock","randomNumArr","length","randomNum","Math","floor","random","push","Set","map","item","React","memo","props","title","subtitle","avatar","className","src","alt","useState","discoverData","setDiscoverData","loadData","useCallback","axios","get","then","res","Error","data","catch","err","console","log","useEffect","items","key","id","onClick","totalChoicenessData","setSw","newSw","Swiper","loop","autoplay","delay","images","i","width","height","type","placeholder","_slicedToArray","arr","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","unsupportedIterableToArray","TypeError","Header","styled","div"],"mappings":"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","file":"static/js/9.0a778729.chunk.js","sourcesContent":["import Mock from 'mockjs';\nconst lessonEverydayData = require('./lessonEverydayData.json')\n\nconst data = Mock.mock('mock/discover/lessonEveryday',function(){\n    let randomNumArr = [];\n    while (randomNumArr.length < 4) {\n        const randomNum = Math.floor(Math.random()*60)\n        randomNumArr.push(randomNum)\n        randomNumArr = [...new Set(randomNumArr)]\n    }\n    \n    const resArr = randomNumArr.map(item => lessonEverydayData[item])\n\n    return resArr;\n})\n\nexport default data;","import React,{FC} from 'react';\nimport './discoverLessonEverydayItem.styl';\nimport {DiscoverLessonEverydayItemInt} from '..'\n\ninterface Props extends DiscoverLessonEverydayItemInt{};\n\nconst GeekUniversityItem:FC<Props> = (props) => {\n    const { \n        title,\n        subtitle,\n        avatar,\n    } = props;\n    \n    return (\n        <div className=\"geek-university-item\">\n            <div className=\"geek-university-item-img\">\n                <img src={avatar} alt=\"\" />\n            </div>\n            <div className=\"geek-university-item-title\">{title}</div>\n            <div className=\"geek-university-item-desc\">{subtitle}</div>\n        </div>\n    )\n}\n\nexport default React.memo(GeekUniversityItem);","import React, { FC, useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport '@/mock/discover-leeson-everyday-data'\n\nimport DiscoverLessonEverydayItem from './discoverLessonEverydayItem'\n\nexport interface DiscoverLessonEverydayItemInt {\n    id: number;\n    title: string;\n    subtitle: string;\n    avatar: string;\n}\n\nconst DiscoverLessonEveryday: FC<any> = props => {\n    const [discoverData, setDiscoverData] = useState<DiscoverLessonEverydayItemInt[]>([]);\n\n    const loadData = useCallback(\n        () => {\n            axios.get('mock/discover/lessonEveryday')\n                .then(res => {\n                    if (!res) {\n                        throw new Error('出错了')\n                    }\n                    setDiscoverData(res.data)\n                })\n                .catch(err => console.log(err))\n        },\n        [],\n    )\n\n    useEffect(() => {\n        loadData();\n    }, [])\n\n    const items: Array<JSX.Element> = discoverData.map((item: DiscoverLessonEverydayItemInt) => {\n        return (\n            <DiscoverLessonEverydayItem\n                {...item}\n                key={item.id}\n            />\n        )\n    })\n\n    return (\n        <div className=\"geek-university\">\n            <div className=\"geek-university-header\">\n                <span></span>\n                <div className=\"geek-university-title\">每日一课</div>\n                <div className=\"view-more\">查看更多</div>\n            </div>\n            <div className=\"geek-university-wrapper\">\n                {\n                    items\n                }\n            </div>\n            <div className=\"change-for-other\" onClick={loadData}>\n                <span className=\"icon iconfont\">&#xe638; 换一换</span>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(DiscoverLessonEveryday);\n// export default DiscoverLessonEveryday;","import Mock from 'mockjs';\nconst totalChoicenessData = require('./totalChoiceness.json')\n\nconst data = Mock.mock('mock/discover/totalChoiceness',function(){\n    let randomNumArr = [];\n    while (randomNumArr.length < 4) {\n        const randomNum = Math.floor(Math.random()*40)\n        randomNumArr.push(randomNum)\n        randomNumArr = [...new Set(randomNumArr)]\n    }\n    \n    const resArr = randomNumArr.map(item => totalChoicenessData[item])\n\n    return resArr;\n})\n\nexport default data;","import React,{FC} from 'react';\nimport {DiscoverTotalChoicenessItemInt} from '..'\nimport './discoverTotalChoicenessItem.styl'\n\ninterface Props extends DiscoverTotalChoicenessItemInt{};\n\nconst DiscoverTotalChoicenessItem:FC<Props> = (props) => {\n    const { \n        title,\n        avatar,\n    } = props;\n    \n    return (\n        <div className=\"geek-university-item\">\n            <div className=\"geek-university-item-img\">\n                <img src={avatar} alt=\"\" />\n            </div>\n            <div className=\"geek-university-item-title\">{title}</div>\n        </div>\n    )\n}\n\nexport default React.memo(DiscoverTotalChoicenessItem);","import React, { FC, useCallback, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport '@/mock/discover-total-choiceness-data'\n\nimport DiscoverTotalChoicenessItem from './discoverTotalChoicenessItem'\n\nexport interface DiscoverTotalChoicenessItemInt {\n    id: number;\n    title: string;\n    avatar: string;\n}\n\nconst DiscoverTotalChoiceness: FC<any> = props => {\n    const [discoverData, setDiscoverData] = useState<DiscoverTotalChoicenessItemInt[]>([]);\n\n    const loadData = useCallback(\n        () => {\n            axios.get('mock/discover/totalChoiceness')\n                .then(res => {\n                    if (!res) {\n                        throw new Error('出错了')\n                    }\n                    setDiscoverData(res.data)\n                })\n                .catch(err => console.log(err))\n        },\n        [],\n    )\n\n    useEffect(() => {\n        loadData();\n    }, [])\n\n    const items: Array<JSX.Element> = discoverData.map((item: DiscoverTotalChoicenessItemInt) => {\n        return (\n            <DiscoverTotalChoicenessItem\n                {...item}\n                key={item.id}\n            />\n        )\n    })\n\n    return (\n        <div className=\"geek-university\">\n            <div className=\"geek-university-header\">\n                <span></span>\n                <div className=\"geek-university-title\">精选合辑</div>\n                <div className=\"view-more\">查看更多</div>\n            </div>\n            <div className=\"geek-university-wrapper\">\n                {\n                    items\n                }\n            </div>\n            <div className=\"change-for-other\" onClick={loadData}>\n                <span className=\"icon iconfont\">&#xe638; 换一换</span>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(DiscoverTotalChoiceness);\n// export default DiscoverTotalChoiceness;","import React, { useEffect, useState, FC } from 'react';\nimport { Header } from '../study/studyHeader.style'\nimport './discover.styl'\nimport Swiper from \"swiper\"\nimport \"swiper/css/swiper.min.css\";\nimport '@/mock/discover-leeson-everyday-data'\n\nimport DiscoverLessonEveryday from './discoverLessonEveryday';\nimport DiscoverTotalChoiceness from './discoverTotalChoiceness'\n\nconst Discover: FC<any> = () => {\n    const swiperImgArr: number[] = [1, 2, 3, 4, 5];\n\n    const [sw, setSw] = useState<null | Swiper>(null)\n    useEffect(() => {\n        const newSw = new Swiper(\".slider-container\", {\n            loop: true,\n            autoplay: {\n                delay: 2000,\n            },\n        })\n        setSw(newSw)\n        return () => {\n            setSw(null)\n        }\n    }, [])\n\n    const images: Array<JSX.Element> = swiperImgArr.map((item: number, i: number) => {\n        return (\n            <div className=\"swiper-slide\" key={i}>\n                <img src={`/imgs/discoverSwiper0${item}.jpg`} alt=\"图片不见了\" width=\"100%\" height=\"100%\" />\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"discover\">\n            <Header>\n                <span className=\"discover-header-title\">发现</span>\n                <span className=\"icon iconfont\">&#xe645;</span>\n            </Header>\n            <div className=\"discover-input-search\">\n                <input className=\"icon iconfont\" type=\"text\" placeholder=\"&#xe606; 搜索课程、课程内容、每日一课等\" />\n            </div>\n            <div className=\"slider-container\">\n                <div className=\"swiper-wrapper\">\n                    {\n                        images\n                    }\n                </div>\n            </div>\n            <div className=\"discover-content\">\n                <div className=\"maitaozheshuo\">\n                    <div className=\"maitaozheshuo-title\">\n                        <div className=\"maitaozheshuo-img\">\n                            <img src=\"https://static001.geekbang.org/resource/image/37/3b/378b7d1867d83e1ab405ee7e052e843b.png\" alt=\"\" />\n                        </div>\n                        <div className=\"maitaozheshuo-name\">\n                            卖桃者说\n                        </div>\n                        <span className=\"icon iconfont\">&#xe613;</span>\n                    </div>\n                    <div className=\"maitaozheshuo-article\">\n                        <span className=\"icon iconfont\">&#xe608;</span>\n                        第320期 | 你离一个优秀架构师还差几步?\n                    </div>\n                </div>\n                <DiscoverLessonEveryday />\n                <DiscoverTotalChoiceness />\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(Discover);","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\n\nexport const Header = styled.div`\n    position: fixed;\n    height: 44px;\n    top: 0;\n    right: 0;\n    left: 0;\n    background-color: #fffefb;\n    z-index: 99;\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 .533333rem;\n    .icon {\n        color: #999999;\n        font-size: 36px;\n    }\n`;"],"sourceRoot":""}