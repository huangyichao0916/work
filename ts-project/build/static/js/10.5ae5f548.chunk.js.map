{"version":3,"sources":["pages/allDiscoverTotalChoiceness/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","baseUI/header/index.tsx","mock/discover-total-choiceness-data/index.js"],"names":["AllDiscoverTotalChoiceness","state","data","axios","get","then","res","setState","className","isGoBackNeeded","middleTitle","Component","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_createSuper","Derived","result","Super","NewTarget","this","constructor","arguments","apply","possibleConstructorReturn","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","_assertThisInitialized","self","ReferenceError","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","assertThisInitialized","judgeIsItIconfont","Header","divLeft","divRight","divMiddle","leftTitle","leftTitleURL","rightTitle","rightTitleURL","Error","onClick","window","history","back","test","to","dangerouslySetInnerHTML","__html","preventDefault","totalChoicenessData","require","urlReg","Mock","mock","option","url","match","randomNumArr","randomNum","Math","floor","random","push","Set","map","item"],"mappings":"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","file":"static/js/10.5ae5f548.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { DiscoverTotalChoicenessItemInt } from '@/pages/discover/discoverTotalChoiceness';\nimport './allDiscoverTotalChoiceness.styl';\nimport axios from 'axios';\nimport '@/mock/discover-total-choiceness-data';\nimport Header from '@/baseUI/header'\n\ninterface State {\n    data: Array<DiscoverTotalChoicenessItemInt>\n}\nclass AllDiscoverTotalChoiceness extends Component<any, State>{\n    state = {\n        data: [],\n    }\n    componentDidMount() {\n        axios.get('/mock/discover/totalChoiceness/all')\n            .then(res => this.setState({\n                data: res.data\n            }))\n    }\n    render() {\n        return (\n            <div className=\"allDiscoverTotalChoiceness\">\n                <Header  isGoBackNeeded={true}  middleTitle={\"精选合辑\"}/>\n                allchoice\n            </div>\n        )\n    }\n}\n\nexport default AllDiscoverTotalChoiceness;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.styl';\n\ninterface Props {\n    isGoBackNeeded?: boolean;\n    leftTitle?: string;\n    leftTitleURL?: string;\n    middleTitle?: string;\n    rightTitle?: string;\n    rightTitleURL?: string;\n}\nconst judgeIsItIconfont: RegExp = /^&#.+;$/;\nclass Header extends Component<Props>{\n    render() {\n        const {\n            isGoBackNeeded = false,\n            leftTitle,\n            leftTitleURL,\n            middleTitle,\n            rightTitle,\n            rightTitleURL\n        } = this.props;\n\n        //左侧的title的判断\n        let divLeft: JSX.Element;\n\n        if (isGoBackNeeded) {\n            if (leftTitle || leftTitleURL) {\n                throw new Error(\"在确定了leftTitle是回退按钮时，不能传入leftTitle或者leftTitleURL了\");\n            }\n            divLeft = (\n                <span className=\"icon iconfont\" onClick={() => window.history.back()}>\n                    &#xe647;\n                </span>\n            )\n        } else {\n            if (leftTitle) {\n                if (judgeIsItIconfont.test(leftTitle)) {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: leftTitle }}></span>\n                                </Link>\n                            </div>\n                        )\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: leftTitle }}></span>\n                            </div>\n                        )\n                    }\n                } else {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    {leftTitle}\n                                </Link>\n                            </div>\n                        )\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                {leftTitle}\n                            </div>\n                        )\n                    }\n                }\n            } else {\n                if (leftTitleURL) {\n                    throw new Error(\"组件Props参数错误，传入leftTitleURL的前提是要传入leftTitle\");\n                } else {\n                    divLeft = (\n                        <span className=\"nothing-left\" onClick={e => e.preventDefault()}>\n                            nothing-left\n                        </span>\n                    )\n                }\n            }\n        }\n\n        //右侧的title的判断\n        let divRight: JSX.Element;\n\n        if (rightTitle) {\n            if (judgeIsItIconfont.test(rightTitle)) {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: rightTitle }}></span>\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: rightTitle }}></span>\n                        </div>\n                    )\n                }\n            } else {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                {rightTitle}\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            {rightTitle}\n                        </div>\n                    )\n                }\n            }\n        } else {\n            if (rightTitleURL) {\n                throw new Error(\"组件Props参数错误，传入rightTitleURL的前提是要传入rightTitle\");\n            } else {\n                divRight = (\n                    <div className=\"nothing-right\" onClick={e => e.preventDefault()}>\n                        nothing-right\n                    </div>\n                )\n            }\n        }\n\n        //中间的title的判断\n        let divMiddle: JSX.Element;\n        if (middleTitle) {\n            divMiddle = (\n                <div className=\"middleTitle\">\n                    {middleTitle}\n                </div>\n            )\n        } else {\n            divMiddle = (\n                <div className=\"middleTitle no-middle-title\" onClick={e => e.preventDefault()}>\n                    no-middle-title\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"baseUIHeader\">\n                {\n                    divLeft\n                }\n                {\n                    divMiddle\n                }\n                {\n                    divRight\n                }\n            </div>\n        )\n    }\n}\n\nexport default Header;","import Mock from 'mockjs';\nconst totalChoicenessData = require('./totalChoiceness.json')\nconst urlReg = /mock\\/discover\\/totalChoiceness(\\/all)?/;\n\nconst data = Mock.mock(urlReg, function (option) {\n    const { url } = option;\n    const havaAll = url.match(urlReg)[1]\n\n    if (!havaAll) {//如果URL中带有/all，那么就返回所有数据\n        let randomNumArr = [];\n        while (randomNumArr.length < 4) {\n            const randomNum = Math.floor(Math.random() * 40)\n            randomNumArr.push(randomNum)\n            randomNumArr = [...new Set(randomNumArr)]\n        }\n\n        const resArr = randomNumArr.map(item => totalChoicenessData[item])\n\n        return resArr;\n    }else{\n        return totalChoicenessData;\n    }\n})\n\nexport default data;"],"sourceRoot":""}