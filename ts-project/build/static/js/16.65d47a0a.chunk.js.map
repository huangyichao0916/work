{"version":3,"sources":["components/rechargeRecord/rechargeRecordItem/index.jsx","pages/rechargeRecord/index.tsx","baseUI/header/index.tsx"],"names":["RechargeRecordItem","styled","div","connect","state","dataSource","getIn","toJS","props","items","map","item","index","year","time","number","key","className","isGoBackNeeded","middleTitle","judgeIsItIconfont","Header","divLeft","divRight","divMiddle","this","leftTitle","leftTitleURL","rightTitle","rightTitleURL","Error","onClick","window","history","back","test","to","dangerouslySetInnerHTML","__html","e","preventDefault","Component"],"mappings":"qTAEO,IAAMA,E,MAAqBC,EAAOC,IAAV,K,gBC2ChBC,uBANS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,MAAM,CAAC,6BAA6BC,UAI/CJ,EAjCmB,SAAAK,GAAU,IAElCC,EADiBD,EAAfH,WACqCK,KAAI,SAACC,EAA6BC,GAAmB,IACtFC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACpB,OACI,kBAACf,EAAD,CAAoBgB,IAAKJ,GACrB,yBAAKK,UAAU,MAAf,qBACQF,EADR,UAGA,yBAAKE,UAAU,QAAf,qBACQJ,EACJ,6BAFJ,qBAGQC,OAKpB,OACI,yBAAKG,UAAU,kBACX,kBAAC,IAAD,CAAQC,gBAAgB,EAAMC,YAAa,6BAC3C,yBAAKF,UAAU,+BACVR,Q,4FCrBXW,G,MAA4B,WAC5BC,E,uKACQ,IAWFC,EA4DAC,EAiDAC,EAxHC,EAQDC,KAAKjB,MARJ,IAEDU,sBAFC,SAGDQ,EAHC,EAGDA,UACAC,EAJC,EAIDA,aACAR,EALC,EAKDA,YACAS,EANC,EAMDA,WACAC,EAPC,EAODA,cAMJ,GAAIX,EAAgB,CAChB,GAAIQ,GAAaC,EACb,MAAM,IAAIG,MAAM,8IAEpBR,EACI,0BAAML,UAAU,gBAAgBc,QAAS,kBAAMC,OAAOC,QAAQC,SAA9D,eAKJ,GAAIR,EAGQJ,EAFJF,EAAkBe,KAAKT,GACnBC,EAEI,yBAAKV,UAAU,aACX,kBAAC,IAAD,CAAMmB,GAAIT,GACN,0BAAMV,UAAU,gBAAgBoB,wBAAyB,CAAEC,OAAQZ,OAM3E,yBAAKT,UAAU,aACX,0BAAMA,UAAU,gBAAgBoB,wBAAyB,CAAEC,OAAQZ,MAK3EC,EAEI,yBAAKV,UAAU,aACX,kBAAC,IAAD,CAAMmB,GAAIT,GACLD,IAMT,yBAAKT,UAAU,aACVS,OAKd,CACH,GAAIC,EACA,MAAM,IAAIG,MAAM,8HAEhBR,EACI,0BAAML,UAAU,eAAec,QAAS,SAAAQ,GAAC,OAAIA,EAAEC,mBAA/C,gBAWhB,GAAIZ,EAGQL,EAFJH,EAAkBe,KAAKP,GACnBC,EAEI,yBAAKZ,UAAU,cACX,kBAAC,IAAD,CAAMmB,GAAIP,GACN,0BAAMZ,UAAU,gBAAgBoB,wBAAyB,CAAEC,OAAQV,OAM3E,yBAAKX,UAAU,cACX,0BAAMA,UAAU,gBAAgBoB,wBAAyB,CAAEC,OAAQV,MAK3EC,EAEI,yBAAKZ,UAAU,cACX,kBAAC,IAAD,CAAMmB,GAAIP,GACLD,IAMT,yBAAKX,UAAU,cACVW,OAKd,CACH,GAAIC,EACA,MAAM,IAAIC,MAAM,gIAEhBP,EACI,yBAAKN,UAAU,gBAAgBc,QAAS,SAAAQ,GAAC,OAAIA,EAAEC,mBAA/C,iBAuBZ,OAbIhB,EADAL,EAEI,yBAAKF,UAAU,eACVE,GAKL,yBAAKF,UAAU,8BAA8Bc,QAAS,SAAAQ,GAAC,OAAIA,EAAEC,mBAA7D,mBAOJ,yBAAKvB,UAAU,gBAEPK,EAGAE,EAGAD,O,GAjJCkB,aAwJNpB,O","file":"static/js/16.65d47a0a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RechargeRecordItem = styled.div`\n    outline:1px solid blue;\n    margin-top:0.2rem;\n`","import React, { FC } from 'react';\nimport './rechargeRecord.styl';\nimport { RechargeRecordItem } from '@/components/rechargeRecord/rechargeRecordItem';\nimport Header from '@/baseUI/header'\n\nimport { connect } from 'react-redux';\n\nimport { RechargeRecordItemInt } from '@/store/types'\n\ninterface Props {\n    dataSource: Array<RechargeRecordItemInt>;\n}\nconst RechargeRecord: FC<Props> = props => {\n    const { dataSource } = props;\n    const items: Array<JSX.Element> = dataSource.map((item: RechargeRecordItemInt, index: number) => {\n        const { year, time, number } = item;\n        return (\n            <RechargeRecordItem key={index}>\n                <div className=\"up\">\n                    充值了{number}元\n                </div>\n                <div className=\"down\">\n                    日期：{year}\n                    <br />\n                    时间：{time}\n                </div>\n            </RechargeRecordItem>\n        )\n    })\n    return (\n        <div className=\"rechargeRecord\">\n            <Header isGoBackNeeded={true} middleTitle={\"充值记录\"}/>\n            <div className=\"rechargeRecord-item-wrapper\">\n                {items}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataSource: state.getIn(['rechargeRecordDataSource']).toJS(),\n    }\n}\n\nexport default connect(mapStateToProps)(RechargeRecord);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.styl';\n\ninterface Props {\n    isGoBackNeeded?: boolean;\n    leftTitle?: string;\n    leftTitleURL?: string;\n    middleTitle?: string;\n    rightTitle?: string;\n    rightTitleURL?: string;\n}\nconst judgeIsItIconfont: RegExp = /^&#.+;$/;\nclass Header extends Component<Props>{\n    render() {\n        const {\n            isGoBackNeeded = false,\n            leftTitle,\n            leftTitleURL,\n            middleTitle,\n            rightTitle,\n            rightTitleURL\n        } = this.props;\n\n        //左侧的title的判断\n        let divLeft: JSX.Element;\n\n        if (isGoBackNeeded) {\n            if (leftTitle || leftTitleURL) {\n                throw new Error(\"在确定了leftTitle是回退按钮时，不能传入leftTitle或者leftTitleURL了\");\n            }\n            divLeft = (\n                <span className=\"icon iconfont\" onClick={() => window.history.back()}>\n                    &#xe647;\n                </span>\n            )\n        } else {\n            if (leftTitle) {\n                if (judgeIsItIconfont.test(leftTitle)) {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: leftTitle }}></span>\n                                </Link>\n                            </div>\n                        )\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: leftTitle }}></span>\n                            </div>\n                        )\n                    }\n                } else {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    {leftTitle}\n                                </Link>\n                            </div>\n                        )\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                {leftTitle}\n                            </div>\n                        )\n                    }\n                }\n            } else {\n                if (leftTitleURL) {\n                    throw new Error(\"组件Props参数错误，传入leftTitleURL的前提是要传入leftTitle\");\n                } else {\n                    divLeft = (\n                        <span className=\"nothing-left\" onClick={e => e.preventDefault()}>\n                            nothing-left\n                        </span>\n                    )\n                }\n            }\n        }\n\n        //右侧的title的判断\n        let divRight: JSX.Element;\n\n        if (rightTitle) {\n            if (judgeIsItIconfont.test(rightTitle)) {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: rightTitle }}></span>\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <span className=\"icon iconfont\" dangerouslySetInnerHTML={{ __html: rightTitle }}></span>\n                        </div>\n                    )\n                }\n            } else {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                {rightTitle}\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            {rightTitle}\n                        </div>\n                    )\n                }\n            }\n        } else {\n            if (rightTitleURL) {\n                throw new Error(\"组件Props参数错误，传入rightTitleURL的前提是要传入rightTitle\");\n            } else {\n                divRight = (\n                    <div className=\"nothing-right\" onClick={e => e.preventDefault()}>\n                        nothing-right\n                    </div>\n                )\n            }\n        }\n\n        //中间的title的判断\n        let divMiddle: JSX.Element;\n        if (middleTitle) {\n            divMiddle = (\n                <div className=\"middleTitle\">\n                    {middleTitle}\n                </div>\n            )\n        } else {\n            divMiddle = (\n                <div className=\"middleTitle no-middle-title\" onClick={e => e.preventDefault()}>\n                    no-middle-title\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"baseUIHeader\">\n                {\n                    divLeft\n                }\n                {\n                    divMiddle\n                }\n                {\n                    divRight\n                }\n            </div>\n        )\n    }\n}\n\nexport default Header;"],"sourceRoot":""}