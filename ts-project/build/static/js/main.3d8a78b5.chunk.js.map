{"version":3,"sources":["store/action.ts","store/constants.ts","mock/course-lesson-data/index.js","serviceWorker.js","store/reducers.ts","store/index.ts","routes/index.js","index.js"],"names":["buyLessonActionCreator","payload","type","constants","addDataToMinePageActionCreator","setIsDotedToTrueActionCreator","setIsDotedToFalseActionCreator","addPurchasedLessonsToStudyPageActionCreator","addDataToPracticeCampActionCreator","addDataToCourseLessonActionCreator","refreshCourseLessonActionCreator","practiceCampBuyLessonActionCreator","price","index","lesson","dispatch","rechargeAndRecordActionCreator","howMuch","console","log","d","Date","newPayload","year","slice","time","number","addRecordToRechargeRecordActionCreator","lessonBuyLessonActionCreator","ADD_RECORD_TO_RECHARGE_RECORD","BUY_LESSON","RECHARGE","ADD_DATA_TO_MINE_PAGE","SET_IS_DOTED_TO_TRUE","SET_IS_DOTED_TO_FALSE","ADD_PURCHASED_LESSONS_TO_STUDY_PAGE","ADD_DATA_TO_PRACTICE_CAMP","SET_PRACTICE_CAMP_TO_BE_PURCHASED","ADD_DATA_TO_COURSE_LESSON","SET_LESSON_TO_BE_PURCHASED","REFRESH_COURSE_LESSON","courseLessons","require","urlReg","Mock","mock","option","url","offset","parseInt","match","data","Boolean","window","location","hostname","defaultMineItemState","List","defaultCourseLessonItemState","defaultPracticeCampItemState","defaultStudyItemState","defaultRechargeRecordState","reducers","account","state","action","mineItemDateSource","setIn","courseLessonDataSource","push","practiceCampDataSource","studyItemDatatSource","rechargeRecordDataSource","unshift","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","SuspenseComponent","Component","props","fallback","Course","lazy","Discover","Mine","Study","App","Account","Home","Lesson","LessonEveryday","PracticeCamp","RechargeRecord","AllDiscoverLessonEveryday","allDiscoverTotalChoiceness","routes","path","component","exact","render","to","axios","get","then","res","items","ReactDOM","StrictMode","renderRoutes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d8a78b5.chunk.js","sourcesContent":["import '@/mock/course-lesson-data';\nimport * as constants from './constants'\nimport {ThunkAction} from 'redux-thunk'\nimport {RootState,MinePageDataItem,CourseLessonItem,\n    PracticeCampItemInt,StudyItemInt,RechargeRecordItemInt} from './types'\n\n/**\n * 充值明细相关的action 和 action creator\n */\nexport interface AddRecordToRechargeRecordAction {\n    type: constants.ADD_RECORD_TO_RECHARGE_RECORD;\n    [otherProps: string]: any;\n}\nexport const addRecordToRechargeRecordActionCreator = (payload: number): AddRecordToRechargeRecordAction => {//payload为充值的数目\n    let d = Date();\n    let year: string = d.slice(11, 15) + d.slice(4, 7) + d.slice(8, 10);\n    let time: string = d.slice(16, 25);\n    let newPayload: RechargeRecordItemInt = {\n        year,\n        time,\n        number: payload,\n    }\n    return {\n        type: constants.ADD_RECORD_TO_RECHARGE_RECORD,\n        payload: newPayload,\n    }\n}\n\n/**\n * account相关的action creator\n */\nexport interface BuyLessonAction {\n    type: constants.BUY_LESSON;\n    [anyProps: string]: any;\n}\nexport const buyLessonActionCreator = (payload: number): BuyLessonAction => {\n    return {\n        type: constants.BUY_LESSON,\n        payload,\n    }\n}\nexport interface RechargeAction {\n    type: constants.RECHARGE;\n    [anyProps: string]: any;\n}\nexport const rechargeActionCreator = (payload: number): RechargeAction => {//payload为充值的数目\n    console.log(payload)\n    return {\n        type: constants.RECHARGE,\n        payload,\n    }\n}\n\n\n/**\n * mineItemDateSource相关的action creator\n */\nexport interface AddDataToMinePageAction {\n    type: constants.ADD_DATA_TO_MINE_PAGE;\n    [anyProps: string]: any;\n}\nexport interface SetIsDotedToTrueAction {\n    type: constants.SET_IS_DOTED_TO_TRUE;\n    [anyProps: string]: any;\n}\nexport interface SetIsDotedToFalseAction {\n    type: constants.SET_IS_DOTED_TO_FALSE;\n    [anyProps: string]: any;\n}\n\nexport const addDataToMinePageActionCreator = (payload: Array<MinePageDataItem>): AddDataToMinePageAction => {//现在的payload是mine的datasource\n    return {\n        type: constants.ADD_DATA_TO_MINE_PAGE,\n        payload,\n    }\n}\nexport const setIsDotedToTrueActionCreator = (payload: number): SetIsDotedToTrueAction => {//现在的payload是mineItem的key\n    return {\n        type: constants.SET_IS_DOTED_TO_TRUE,\n        payload\n    }\n}\nexport const setIsDotedToFalseActionCreator = (payload: number): SetIsDotedToFalseAction => {//现在的payload是mineItem的key\n    return {\n        type: constants.SET_IS_DOTED_TO_FALSE,\n        payload\n    }\n}\n\n\n/**\n * studyItem相关的actioncreator \n */\nexport interface AddPurchasedLessonsToStudyPageAction {\n    type: constants.ADD_PURCHASED_LESSONS_TO_STUDY_PAGE;\n    [anyProps: string]: any;\n}\nexport const addPurchasedLessonsToStudyPageActionCreator = (payload: StudyItemInt): AddPurchasedLessonsToStudyPageAction => {\n    return {\n        type: constants.ADD_PURCHASED_LESSONS_TO_STUDY_PAGE,\n        payload\n    }\n}\n\n/**\n * 讲堂 -》 训练营相关的action 以及action creator\n */\nexport interface AddDataToPracticeCampAction {\n    type: constants.ADD_DATA_TO_PRACTICE_CAMP;\n    [anyProps: string]: any;\n}\nexport const addDataToPracticeCampActionCreator = (payload: Array<PracticeCampItemInt>): AddDataToPracticeCampAction => {//现在的payload是数据\n    return {\n        type: constants.ADD_DATA_TO_PRACTICE_CAMP,\n        payload,\n    }\n}\nexport interface SetPracticeCampToBePurchasedAction {\n    type: constants.SET_PRACTICE_CAMP_TO_BE_PURCHASED;\n    [anyProps: string]: any;\n}\nexport const setPracticeCampToBePurchasedActionCreator = (payload: number): SetPracticeCampToBePurchasedAction => {//现在的payload是 id\n    return {\n        type: constants.SET_PRACTICE_CAMP_TO_BE_PURCHASED,\n        payload\n    }\n}\n\n/**\n * courseLessonItem相关的action creator\n */\nexport interface AddDataToCourseLessonAction{\n    type: constants.ADD_DATA_TO_COURSE_LESSON,\n    [anyProps: string]: any;\n}\nexport const addDataToCourseLessonActionCreator = (payload:Array<CourseLessonItem>):AddDataToCourseLessonAction => {//现在的payload是数据\n    return {\n        type: constants.ADD_DATA_TO_COURSE_LESSON,\n        payload\n    }\n}\nexport interface RefreshCourseLessonAction{\n    type: constants.REFRESH_COURSE_LESSON,\n    [anyProps: string]: any;\n}\nexport const refreshCourseLessonActionCreator = (payload:Array<CourseLessonItem>):RefreshCourseLessonAction => {\n    return {\n        type: constants.REFRESH_COURSE_LESSON,\n        payload\n    }\n}\nexport interface SetLessonToBePurchasedAction{\n    type: constants.SET_LESSON_TO_BE_PURCHASED,\n    [anyProps: string]: any;\n}\nexport const setLessonToBePurchasedActionCreator = (payload:number):SetLessonToBePurchasedAction => {//现在的payload是索引\n    return {\n        type: constants.SET_LESSON_TO_BE_PURCHASED,\n        payload\n    }\n}\n\n\n//声明Action的联合类型\nexport type ActionType = AddRecordToRechargeRecordAction | BuyLessonAction | RechargeAction |\n    AddDataToMinePageAction | SetIsDotedToTrueAction | SetIsDotedToFalseAction | AddPurchasedLessonsToStudyPageAction |\n    AddDataToPracticeCampAction | SetPracticeCampToBePurchasedAction | AddDataToCourseLessonAction | \n    SetLessonToBePurchasedAction | RefreshCourseLessonAction\n\n//声明ThunkAction\nexport type ThunkActionType = ThunkAction<any,RootState,any,ActionType>\n\n// practiceCamp购买课程相关的action creator \nexport const practiceCampBuyLessonActionCreator = (price:number, index:number, lesson:StudyItemInt):ThunkActionType => {\n    return (dispatch) => {\n        dispatch(buyLessonActionCreator(price));\n        dispatch(setIsDotedToTrueActionCreator(0));\n        dispatch(setIsDotedToTrueActionCreator(1));\n        dispatch(setIsDotedToTrueActionCreator(2));\n        dispatch(setPracticeCampToBePurchasedActionCreator(index));\n        dispatch(addPurchasedLessonsToStudyPageActionCreator(lesson))\n    }\n}\nexport const rechargeAndRecordActionCreator = (howMuch:number):ThunkActionType => {\n    return (dispatch) => {\n        dispatch(rechargeActionCreator(howMuch));\n        dispatch(addRecordToRechargeRecordActionCreator(howMuch))\n        // console.log(getState().getIn(['rechargeRecordDataSource'].toJS()));\n    }\n}\nexport const lessonBuyLessonActionCreator = (price:number, index:number, lesson:StudyItemInt):ThunkActionType => {\n    return (dispatch) => {\n        dispatch(buyLessonActionCreator(price));\n        dispatch(setIsDotedToTrueActionCreator(0));\n        dispatch(setIsDotedToTrueActionCreator(1));\n        dispatch(setIsDotedToTrueActionCreator(2));\n        dispatch(addPurchasedLessonsToStudyPageActionCreator(lesson));\n        dispatch(setLessonToBePurchasedActionCreator(index));\n    }\n}","//充值明细相关的action type\nexport const ADD_RECORD_TO_RECHARGE_RECORD = 'ADD_RECORD_TO_RECHARGE_RECORD';\nexport type ADD_RECORD_TO_RECHARGE_RECORD = typeof ADD_RECORD_TO_RECHARGE_RECORD;\n\n//account相关的action type\nexport const BUY_LESSON = 'BUY_LESSON';\nexport type BUY_LESSON = typeof BUY_LESSON;\nexport const RECHARGE = 'RECHARGE';\nexport type RECHARGE = typeof RECHARGE;\n\n//mineItemDateSource相关的action type\nexport const ADD_DATA_TO_MINE_PAGE = 'ADD_DATA_TO_MINE_PAGE';\nexport type ADD_DATA_TO_MINE_PAGE = typeof ADD_DATA_TO_MINE_PAGE;\nexport const SET_IS_DOTED_TO_TRUE = 'SET_IS_DOTED_TO_TRUE';\nexport type SET_IS_DOTED_TO_TRUE = typeof SET_IS_DOTED_TO_TRUE;\nexport const SET_IS_DOTED_TO_FALSE = 'SET_IS_DOTED_TO_FALSE';\nexport type SET_IS_DOTED_TO_FALSE = typeof SET_IS_DOTED_TO_FALSE;\n\n//studyItem相关的action type\nexport const ADD_PURCHASED_LESSONS_TO_STUDY_PAGE = 'ADD_PURCHASED_LESSONS_TO_STUDY_PAGE';\nexport type ADD_PURCHASED_LESSONS_TO_STUDY_PAGE = typeof ADD_PURCHASED_LESSONS_TO_STUDY_PAGE;\n\n//讲堂 -》 训练营相关的action type\nexport const ADD_DATA_TO_PRACTICE_CAMP = 'ADD_DATA_TO_PRACTICE_CAMP';\nexport type ADD_DATA_TO_PRACTICE_CAMP = typeof ADD_DATA_TO_PRACTICE_CAMP;\nexport const SET_PRACTICE_CAMP_TO_BE_PURCHASED = 'SET_PRACTICE_CAMP_TO_BE_PURCHASED';\nexport type SET_PRACTICE_CAMP_TO_BE_PURCHASED = typeof SET_PRACTICE_CAMP_TO_BE_PURCHASED;\n\n//courseLessonItem相关的action type\nexport const ADD_DATA_TO_COURSE_LESSON = 'ADD_DATA_TO_COURSE_LESSON';\nexport type ADD_DATA_TO_COURSE_LESSON = typeof ADD_DATA_TO_COURSE_LESSON;\nexport const SET_LESSON_TO_BE_PURCHASED = 'SET_LESSON_TO_BE_PURCHASED';\nexport type SET_LESSON_TO_BE_PURCHASED = typeof SET_LESSON_TO_BE_PURCHASED;\nexport const REFRESH_COURSE_LESSON = 'REFRESH_COURSE_LESSON';\nexport type REFRESH_COURSE_LESSON = typeof REFRESH_COURSE_LESSON;","import Mock from 'mockjs';\nconst courseLessons = require('./courseLessons.json')\n\nconst urlReg = /\\/mock\\/course\\/lesson\\?offset\\=(\\d{1,})/;\n\nconst data = Mock.mock(urlReg,function(option){\n    const {url} = option;\n    const offset = parseInt(url.match(urlReg)[1]);\n\n    if (offset > 110) {\n        return null;\n    }\n\n    return {\n        data: courseLessons.slice(offset,offset + 10),\n        offset: offset + 10\n    };\n\n    // return courseLessons.slice(offset,offset + 10);\n})\n\nexport default data;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {List} from 'immutable';\nimport * as constants from './constants'\nimport {BalanceState,MineItemState,CourseLessonItemState\n    ,PracticeCampItemState,StudyItemState,RechargeRecordState, RootState} from './types'\nimport {Reducer,ReducersMapObject} from 'redux'\nimport {ActionType} from './action'\n\nlet defaultBalanceState:BalanceState = 10000;\nconst balanceReducer:Reducer<BalanceState,ActionType> = (state = defaultBalanceState,action) => {\n    const {type,payload} = action;\n    switch (type) {\n        case constants.BUY_LESSON:\n            return state - payload;\n        case constants.RECHARGE:\n            return state + payload;\n        default:\n            return state;\n    }\n}\n\nconst defaultMineItemState:MineItemState = List([]);\nconst mineItemReducer:Reducer<MineItemState,ActionType> = (state = defaultMineItemState,action) => {\n    const {type,payload} = action;\n    switch (type) {\n        case constants.ADD_DATA_TO_MINE_PAGE:\n            return List(payload);\n        case constants.SET_IS_DOTED_TO_TRUE:\n            return state.setIn([payload,'isDotShow'],1);\n        case constants.SET_IS_DOTED_TO_FALSE:\n            return state.setIn([payload,'isDotShow'],0);\n        default:\n            return state;\n    }\n}\n\nconst defaultCourseLessonItemState:CourseLessonItemState = List([]);\nconst courseLessonItemReducer:Reducer<CourseLessonItemState,ActionType> = (state = defaultCourseLessonItemState , action) => {\n    const {type,payload} = action;\n    switch (type) {\n        case constants.ADD_DATA_TO_COURSE_LESSON:\n            return state.push(...payload);\n        case constants.SET_LESSON_TO_BE_PURCHASED:\n            return state.setIn([payload,'haveLearned'],true);\n        case constants.REFRESH_COURSE_LESSON:\n            return List(payload)\n        default:\n            return state;\n    }\n}\n\nconst defaultPracticeCampItemState:PracticeCampItemState = List([]);\nconst practiceCampItemReducer:Reducer<PracticeCampItemState,ActionType> = (state = defaultPracticeCampItemState,action) => {\n    const {type , payload} = action;\n    switch (type) {\n        case constants.ADD_DATA_TO_PRACTICE_CAMP:\n            return List(payload)\n        case constants.SET_PRACTICE_CAMP_TO_BE_PURCHASED:\n            return state.setIn([payload,'haveLearned'],true)\n        default:\n            return state;\n    }\n}\n\nconst defaultStudyItemState:StudyItemState = List([]);\nconst studyItemReducer:Reducer<StudyItemState,ActionType> = (state = defaultStudyItemState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case constants.ADD_PURCHASED_LESSONS_TO_STUDY_PAGE:\n            return state.push(payload);\n        default:\n            return state;\n    }\n}\n\nconst defaultRechargeRecordState:RechargeRecordState = List([]);\nconst rechargeRecordReducer:Reducer<RechargeRecordState,ActionType> = (state = defaultRechargeRecordState , action) => {\n    const {type,payload} = action;\n    switch (type) {\n        case constants.ADD_RECORD_TO_RECHARGE_RECORD:\n            return state.unshift(payload);\n        default:\n            return state;\n    }\n}\n\nconst reducers:ReducersMapObject<RootState,ActionType> = {\n    account:balanceReducer,//账户余额 Number\n    mineItemDateSource:mineItemReducer,//我的 页面的每一项的数据 Array\n    courseLessonDataSource:courseLessonItemReducer,//讲堂的课程页面下面的数据源 Array\n    practiceCampDataSource:practiceCampItemReducer,//讲堂的训练营下面的数据源  Array\n    studyItemDatatSource:studyItemReducer, // 我的学习下面的数据源\n    rechargeRecordDataSource:rechargeRecordReducer,//充值明细的数据源  Array\n}\n\nexport default reducers;","import {combineReducers} from 'redux-immutable';\nimport {createStore,applyMiddleware,Reducer,Store} from 'redux';\nimport {RootState} from './types'\nimport {ActionType} from './action'\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\n\nconst rootReducer:Reducer<RootState,ActionType> = combineReducers<RootState,ActionType>(reducers);\n\nconst store:Store<RootState,ActionType> = createStore(rootReducer,applyMiddleware(thunk));\n\n\n\nexport default store;","import React, { lazy, Suspense } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst SuspenseComponent = Component => props => {\n    return (\n        <Suspense fallback={null}>\n            <Component {...props}></Component>\n        </Suspense>\n    )\n}\n\nconst Course = lazy(() => import('@/pages/course'))\nconst Discover = lazy(() => import('@/pages/discover'))\nconst Mine = lazy(() => import('@/pages/mine'))\nconst Study = lazy(() => import('@/pages/study'))\nconst App = lazy(() => import('@/App'))\nconst Account = lazy(() => import('@/pages/account'))\nconst Home = lazy(() => import('@/pages/home'))\nconst Lesson = lazy(() => import('@/pages/course/lesson'))\nconst LessonEveryday = lazy(() => import('@/pages/course/lessonEveryday'))\nconst PracticeCamp = lazy(() => import('@/pages/course/practiceCamp'))\nconst RechargeRecord = lazy(() => import('@/pages/rechargeRecord'))\nconst AllDiscoverLessonEveryday = lazy(() => import('@/pages/allDiscoverLessonEveryday'))\nconst allDiscoverTotalChoiceness = lazy(() => import('@/pages/allDiscoverTotalChoiceness'))\n\n\nconst routes = [\n    {\n        path: '/',\n        component: SuspenseComponent(App),\n        routes: [\n            {\n                path: '/',\n                exact: true,\n                render: () => <Redirect to='/home' />\n            },\n            {\n                path: '/home',\n                component: SuspenseComponent(Home),\n                routes: [\n                    {\n                        path: '/home',\n                        exact: true,\n                        render: () => <Redirect to='/home/discover' />\n                    },\n                    {\n                        path: '/home/discover',\n                        component: SuspenseComponent(Discover),\n                    },\n                    {\n                        path: '/home/course',\n                        component: SuspenseComponent(Course),\n                        routes: [\n                            {\n                                path: '/home/course',\n                                exact: true,\n                                render: () => <Redirect to='/home/course/lesson' />\n                            },\n                            {\n                                path: '/home/course/lesson',\n                                component: SuspenseComponent(Lesson),\n                            },\n                            {\n                                path: '/home/course/practiceCamp',\n                                component: SuspenseComponent(PracticeCamp),\n                            },\n                            {\n                                path: '/home/course/lessonEveryday',\n                                component: SuspenseComponent(LessonEveryday),\n                            },\n                        ]\n                    },\n                    {\n                        path: '/home/mine',\n                        component: SuspenseComponent(Mine),\n                    },\n                    {\n                        path: '/home/study',\n                        component: SuspenseComponent(Study),\n                    }\n                ]\n            },\n            {\n                path: '/account',\n                component: SuspenseComponent(Account),\n            },\n            {\n                path: '/rechargeRecord',\n                component: SuspenseComponent(RechargeRecord),\n            },\n            {\n                path: '/allDiscoverLessonEveryday',\n                component: SuspenseComponent(AllDiscoverLessonEveryday),\n            },\n            {\n                path: '/allDiscoverTotalChoiceness',\n                component: SuspenseComponent(allDiscoverTotalChoiceness),\n            }\n        ]\n    },\n\n]\n\nexport default routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {renderRoutes} from 'react-router-config';\nimport * as serviceWorker from './serviceWorker';\nimport './index.styl';\nimport axios from 'axios';\n\nimport store from '@/store';\nimport { addDataToMinePageActionCreator } from '@/store/action';\n\nimport routes from '@/routes';\n\nimport {Provider} from 'react-redux';\n\n\naxios.get('/mine/mineItem.json')\n  .then(res => res.data.items)\n  .then(res => store.dispatch(addDataToMinePageActionCreator(res)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        {renderRoutes(routes)}\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}