{"version":3,"sources":["pages/course/practiceCamp/practiceCampItem/PracticeCampItem.tsx","mock/course-practiceCamp-data.js","pages/course/practiceCamp/PracticeCamp.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["PracticeCampItem","props","img","lessonName","teacherName","teacherDesc","month","day","price","oldprice","isPurchased","id","onHandleJoinCamp","className","src","alt","onClick","Mock","mock","connect","state","practiceCampDataSource","getIn","toJS","dispatch","loadPracticeCampData","payload","addDataToPracticeCampActionCreator","lesson","practiceCampBuyLessonActionCreator","useEffect","length","axios","get","then","res","data","practiceCamps","useState","setScroll","bscroll","BScroll","scrollX","click","scrollY","items","map","item","i","title","name","desc","key","_slicedToArray","arr","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/13.788975f8.chunk.js","sourcesContent":["import React,{FC} from 'react';\nimport './practiceCampItem.styl'\nimport {StudyItemInt} from '../../../../store/types';\n\ninterface Props{\n    day: number;\n    teacherDesc: string;\n    id: number;\n    img: string;\n    isPurchased: boolean;\n    month: number;\n    teacherName: string;\n    oldprice: number;\n    price: number;\n    lessonName: string;\n\n    onHandleJoinCamp:(price:number,id:number,lesson:StudyItemInt) => void;\n}\nconst PracticeCampItem:FC<Props> = props => {\n    const {\n        img,\n        lessonName,\n        teacherName,\n        teacherDesc,\n        month,\n        day,\n        price,\n        oldprice,\n        isPurchased,\n        id,\n\n        onHandleJoinCamp,\n    } = props;\n\n    return (\n        <div className=\"practiceCamp-item\">\n            <div className=\"practiceCamp-item-img\">\n                <img src={img} alt=\"图片不见了\" />\n            </div>\n            <div className=\"practiceCamp-item-detail\">\n                <div className=\"practiceCamp-item-name\">{lessonName}</div>\n                <div className=\"practiceCamp-item-teacher\">\n                    <div className=\"practiceCamp-item-teacher-name\">{teacherName}</div>\n                    <div className=\"practiceCamp-item-teacher-desc\">{teacherDesc}</div>\n                </div>\n                <div className=\"practiceCamp-item-time\">最近开营：{month}月{day}日</div>\n                <div className=\"price-and-join\">\n                    <div className=\"practiceCamp-item-price\">￥{price}</div>\n                    <div className=\"practiceCamp-item-oldprice\">￥{oldprice}</div>\n                    {!isPurchased && <button onClick={() => {\n                        onHandleJoinCamp(price,id,{\n                            lessonName,\n                            teacherName,\n                            teacherDesc,\n                        });\n                    }}>立即报名</button>}\n                    {isPurchased && <button className=\"hasBeenPurchased\">已报名</button>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PracticeCampItem;","import Mock from 'mockjs';\n\nconst data = Mock.mock('mock/course/practiceCamp',{\n    'practiceCamps|29':[{\n        'id|+1':0,\n        'img': \"@Image('82x108.5','@color','@cname')\",\n        'title': '@ctitle',\n        'name':'@cname',\n        'desc': '@csentence',\n        'month|1-12':1,\n        'day|1-30': 10,\n        'price|1000-2000':1888,\n        'oldprice|2000-3000':2888,\n        'isPurchased':false,\n        'itemType':'practiceCamp',\n    }]\n})\n\nexport default data;","import React, { useEffect, useState, FC } from 'react';\nimport PracticeCampItem from './practiceCampItem/PracticeCampItem'\nimport './practiceCamp.styl'\nimport axios from 'axios';\nimport '@/mock/course-practiceCamp-data';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk'\nimport { addDataToPracticeCampActionCreator, ActionType, practiceCampBuyLessonActionCreator } from '../../../store/action';\nimport BScroll from 'better-scroll';\nimport { PracticeCampItemInt, StudyItemInt } from '../../../store/types'\nimport { RootState } from '../../../store/types';\n\n\ninterface Props {\n    practiceCampDataSource: Array<PracticeCampItemInt>;\n    loadPracticeCampData: (payload: Array<PracticeCampItemInt>) => void;\n    onHandleJoinCamp: (price: number, id: number, lesson: StudyItemInt) => void;\n}\nconst PracticeCamp: FC<Props> = props => {\n    let { practiceCampDataSource, loadPracticeCampData, onHandleJoinCamp } = props;\n    useEffect(() => {\n        if (practiceCampDataSource.length > 0) {\n            // console.log('因为practiceCampDataSource中有数据，所以阻断了axios请求');\n            return;\n        }\n        axios.get('mock/course/practiceCamp')\n            .then(res => res.data.practiceCamps)\n            .then(res => { loadPracticeCampData(res) })\n    }, [])\n\n    const [scroll, setScroll] = useState<null | BScroll>(null);\n    useEffect(() => {\n        const bscroll = new BScroll('.practiceCamp-wrapper', {\n            scrollX: false,\n            click: true,\n            scrollY: true,\n        })\n        setScroll(bscroll);\n    }, [])\n\n    const items: Array<JSX.Element> = practiceCampDataSource.map((item: PracticeCampItemInt, i: number) => {\n        const { img, title, name, desc, month, day, price, oldprice, isPurchased } = item;\n        return (\n            <PracticeCampItem\n                img={img}\n                id={i}\n                lessonName={title}\n                teacherName={name}\n                teacherDesc={desc}\n                month={month}\n                day={day}\n                price={price}\n                oldprice={oldprice}\n                isPurchased={isPurchased}\n\n                key={i}\n\n                onHandleJoinCamp={onHandleJoinCamp}\n            />\n        )\n    })\n    return (\n        <div className=\"practiceCamp-wrapper\">\n            <div className=\"content\">\n                <div className=\"image\">\n                    <img src=\"/imgs/discoverSwiper05.jpg\" alt=\"\" />\n                </div>\n                <div className=\"practiceCampCamp-item-wrapper\">\n                    <div className=\"practiceCamp-title\">\n                        <div className=\"practiceCamp-main-title\">训练营</div>\n                        <div className=\"go-my-classroom\">去我的教室学习</div>\n                    </div>\n                    {\n                        items\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        practiceCampDataSource: state.getIn(['practiceCampDataSource']).toJS(),\n    }\n}\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, any, ActionType>) => {\n    return {\n        loadPracticeCampData: (payload: Array<PracticeCampItemInt>) => {\n            dispatch(addDataToPracticeCampActionCreator(payload));\n        },\n        onHandleJoinCamp: (price: number, id: number, lesson: StudyItemInt) => {\n            // console.log(payload,id,lesson)\n            dispatch(practiceCampBuyLessonActionCreator(price, id, lesson))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PracticeCamp);","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}